import 'package:flutter/material.dart';
import 'package:flutter_map/plugin_api.dart';
import 'package:flutter_screenutil/flutter_screenutil.dart';
import 'package:gharelu/src/core/assets/assets.gen.dart';
import 'package:gharelu/src/core/extensions/context_extension.dart';
import 'package:gharelu/src/core/state/app_state.dart';
import 'package:gharelu/src/core/theme/app_styles.dart';
import 'package:gharelu/src/core/widgets/widgets.dart';
import 'package:gharelu/src/map_view/providers/get_location_provider.dart';
import 'package:hooks_riverpod/hooks_riverpod.dart';
import 'package:latlong2/latlong.dart';

typedef Success = Function(String, String, LatLng);

class MapPickerView extends StatefulHookConsumerWidget ***REMOVED***
  const MapPickerView(this.onSuccess, ***REMOVED***Key? key***REMOVED***) : super(key: key);
  // ignore: inference_failure_on_function_return_type
  final Success onSuccess;

***REMOVED***
  _MapPickerViewState createState() => _MapPickerViewState();
***REMOVED***

class _MapPickerViewState extends ConsumerState<MapPickerView> ***REMOVED***
  late MapController controller;

***REMOVED***
  void initState() ***REMOVED***
    super.initState();
    controller = MapController();
    selectedLatLng = LatLng(27.70169, 85.3206);
    WidgetsBinding.instance.addPostFrameCallback((timeStamp) ***REMOVED***
      // context.showSnackbar(message: 'Tab anywhere to Select Location');
  ***REMOVED***
  ***REMOVED***

  late LatLng selectedLatLng;

***REMOVED***
  Widget build(BuildContext context) ***REMOVED***
    ref.listen(getLocationStateProvider, (previous, next) ***REMOVED***
      final state = next as AppState;
      state.maybeWhen(
        orElse: () => null,
        success: (data) => context.showSnackbar(message: data.toString()),
        error: (message) => context.showSnackbar(message: message),
      );
  ***REMOVED***
    return StatefulBuilder(
      builder: (context, setState) ***REMOVED***
        return ScaffoldWrapper(
          extendBody: true,
          floatingActionButton: Consumer(builder: (context, ref, _) ***REMOVED***
            final String? location =
                ref.watch(getLocationStateProvider).maybeWhen(
                      orElse: () => null,
                      success: (data) => data.toString(),
                    );
            return FloatingActionButton(
              onPressed: () => widget.onSuccess(location!, '', selectedLatLng),
              child: ref.watch(getLocationStateProvider).maybeWhen(
                    orElse: () => null,
                    loading: () => const Center(
                      child: CircularProgressIndicator(),
                    ),
                    success: (data) => const Icon(Icons.done),
                  ),
            );
          ***REMOVED***),
          floatingActionButtonLocation:
              FloatingActionButtonLocation.centerDocked,
          bottomNavigationBar: BottomAppBar(
            notchMargin: 15,
            shape: const CircularNotchedRectangle(),
            child: Container(
              height: 105,
              padding: EdgeInsets.all(10.0.r),
              child: Column(
                children: [
                  const Spacer(),
                  Consumer(builder: (context, ref, _) ***REMOVED***
                    final String location =
                        ref.watch(getLocationStateProvider).maybeWhen(
                              orElse: () => 'Pick Your Location',
                              success: (data) => data.toString(),
                              error: (message) => message,
                              loading: () => 'Loading',
                            );
                    return Text(
                      location,
                      style: AppStyles.text14PxRegular,
                      maxLines: 2,
                      overflow: TextOverflow.ellipsis,
                    );
                  ***REMOVED***),
          ***REMOVED***
              ),
            ),
          ),
          body: Stack(
            alignment: Alignment.center,
            children: [
              FlutterMap(
                options: MapOptions(
                  onPointerDown: (event, point) ***REMOVED***
                    selectedLatLng = point;
                    setState(() ***REMOVED******REMOVED***);
                    ref
                        .read(getLocationStateProvider.notifier)
                        .getLocationFromLatLng(
                            lat: '$***REMOVED***selectedLatLng.latitude***REMOVED***',
                            lng: '$***REMOVED***selectedLatLng.longitude***REMOVED***');
                  ***REMOVED***,
                  allowPanningOnScrollingParent: true,
                  controller: controller,
                  keepAlive: true,
                  bounds: LatLngBounds.fromPoints([
                    LatLng(85.2707908, 27.6985002),
                    LatLng(85.2681088, 27.6975115),
                    LatLng(85.2681778, 27.6971749),
                    LatLng(85.2685597, 27.6953119),
                    LatLng(85.2680887, 27.693655),
                    LatLng(85.2701529, 27.6913186),
                    LatLng(85.2770989, 27.6914818),
                    LatLng(85.2781685, 27.6824301),
                    LatLng(85.2796349, 27.6821924),
                    LatLng(85.2818584, 27.6837865),
                    LatLng(85.282784, 27.6839966),
                    LatLng(85.2871201, 27.6844031),
                    LatLng(85.2937179, 27.6812498),
                    LatLng(85.2989189, 27.6784716),
                    LatLng(85.2991498, 27.6792395),
                    LatLng(85.2991978, 27.679962),
                    LatLng(85.2990907, 27.6818226),
                    LatLng(85.2991203, 27.6833208),
                    LatLng(85.2991705, 27.6837303),
                    LatLng(85.2995843, 27.6845232),
                    LatLng(85.300165, 27.6853692),
                    LatLng(85.3010886, 27.6891679),
                    LatLng(85.3016576, 27.6902578),
                    LatLng(85.3023569, 27.6914597),
                    LatLng(85.3032522, 27.6922255),
                    LatLng(85.3036953, 27.6924547),
                    LatLng(85.3050278, 27.6929368),
                    LatLng(85.3062952, 27.6932242),
                    LatLng(85.3068277, 27.693316),
                    LatLng(85.3087172, 27.6928573),
                    LatLng(85.3101991, 27.6922386),
                    LatLng(85.3114448, 27.6917393),
                    LatLng(85.3118353, 27.6917058),
                    LatLng(85.3121318, 27.6917322),
                    LatLng(85.3134145, 27.691473),
                    LatLng(85.314205, 27.6910368),
                    LatLng(85.3150883, 27.690501),
                    LatLng(85.316171, 27.6897591),
                    LatLng(85.318065, 27.6882881),
                    LatLng(85.3190912, 27.6877395),
                    LatLng(85.3218888, 27.6867028),
                    LatLng(85.3232414, 27.6867332),
                    LatLng(85.3246968, 27.686709),
                    LatLng(85.3264146, 27.686279),
                    LatLng(85.3271931, 27.6858425),
                    LatLng(85.3274641, 27.6855553),
                    LatLng(85.3285951, 27.6839761),
                    LatLng(85.3287104, 27.6834935),
                    LatLng(85.3287958, 27.6829581),
                    LatLng(85.3289585, 27.6826195),
                    LatLng(85.3293042, 27.6817157),
                    LatLng(85.3305276, 27.6800425),
                    LatLng(85.3313478, 27.6792281),
                    LatLng(85.3325752, 27.6787711),
                    LatLng(85.3335937, 27.6785846),
                    LatLng(85.3349888, 27.6780549),
                    LatLng(85.3352241, 27.6778767),
                    LatLng(85.3355133, 27.6775271),
                    LatLng(85.335721, 27.6773717),
                    LatLng(85.3359381, 27.6772526),
                    LatLng(85.3373649, 27.6762093),
                    LatLng(85.3377624, 27.6757917),
                    LatLng(85.3382089, 27.6755874),
                    LatLng(85.339091, 27.6752466),
                    LatLng(85.3398315, 27.6748185),
                    LatLng(85.3403584, 27.6743926),
                    LatLng(85.3406388, 27.6740934),
                    LatLng(85.340789, 27.6738499),
                    LatLng(85.3409708, 27.6735974),
                    LatLng(85.3415099, 27.6731908),
                    LatLng(85.3420129, 27.6729527),
                    LatLng(85.3423548, 27.6725708),
                    LatLng(85.343152, 27.672299),
                    LatLng(85.343546, 27.6720493),
                    LatLng(85.3447879, 27.6713374),
                    LatLng(85.3465501, 27.6696506),
                    LatLng(85.3474749, 27.6690696),
                    LatLng(85.3477889, 27.6688199),
                    LatLng(85.349139, 27.6683367),
                    LatLng(85.3499562, 27.6681786),
                    LatLng(85.3508357, 27.6681671),
                    LatLng(85.3515353, 27.6679629),
                    LatLng(85.3517941, 27.6679493),
                    LatLng(85.3520342, 27.6680485),
                    LatLng(85.352287, 27.6685064),
                    LatLng(85.3523107, 27.6686853),
                    LatLng(85.3522677, 27.6701699),
                    LatLng(85.3528578, 27.6710365),
                    LatLng(85.3536947, 27.6718156),
                    LatLng(85.3542079, 27.672779),
                    LatLng(85.3546925, 27.6736666),
                    LatLng(85.3554649, 27.6758519),
                    LatLng(85.3555078, 27.676764),
                    LatLng(85.3550358, 27.6776571),
                    LatLng(85.3553898, 27.6787897),
                    LatLng(85.3555091, 27.6809682),
                    LatLng(85.356206, 27.6814375),
                    LatLng(85.3564855, 27.6816257),
                    LatLng(85.3584964, 27.6819456),
                    LatLng(85.3589345, 27.6820152),
                    LatLng(85.3600689, 27.6821957),
                    LatLng(85.361292, 27.6825757),
                    LatLng(85.3615066, 27.6830888),
                    LatLng(85.3610989, 27.6836398),
                    LatLng(85.3615066, 27.6843809),
                    LatLng(85.3637811, 27.685787),
                    LatLng(85.3638902, 27.6858715),
                    LatLng(85.3648218, 27.6865926),
                    LatLng(85.3667409, 27.6878913),
                    LatLng(85.3681035, 27.688773),
                    LatLng(85.369663, 27.6891326),
                    LatLng(85.3703567, 27.6892758),
                    LatLng(85.3706599, 27.6900717),
                    LatLng(85.3688543, 27.6915085),
                    LatLng(85.3673589, 27.6933817),
                    LatLng(85.3671915, 27.6963447),
                    LatLng(85.3667141, 27.6968757),
                    LatLng(85.3660288, 27.698247),
                    LatLng(85.3650521, 27.699203),
                    LatLng(85.3645685, 27.7005828),
                    LatLng(85.3649079, 27.7016844),
                    LatLng(85.3667192, 27.7033986),
                    LatLng(85.3689492, 27.7056414),
                    LatLng(85.3681751, 27.7070647),
                    LatLng(85.3674519, 27.7077993),
                    LatLng(85.3671807, 27.7083632),
                    LatLng(85.3670561, 27.7087631),
                    LatLng(85.3669764, 27.7090721),
                    LatLng(85.3667379, 27.709478),
                    LatLng(85.3665714, 27.7100154),
                    LatLng(85.3666515, 27.7105115),
                    LatLng(85.3666675, 27.7110578),
                    LatLng(85.3653493, 27.7120137),
                    LatLng(85.3653854, 27.7120896),
                    LatLng(85.3658163, 27.712958),
                    LatLng(85.3657984, 27.7143766),
                    LatLng(85.3652327, 27.7153127),
                    LatLng(85.3644512, 27.7163658),
                    LatLng(85.3646152, 27.7170427),
                    LatLng(85.3649773, 27.7185375),
                    LatLng(85.3658888, 27.7191922),
                    LatLng(85.3651127, 27.7195104),
                    LatLng(85.3655466, 27.7207759),
                    LatLng(85.3702546, 27.7214245),
                    LatLng(85.3719839, 27.7225868),
                    LatLng(85.3722104, 27.7240671),
                    LatLng(85.3730214, 27.7262965),
                    LatLng(85.3731257, 27.7275995),
                    LatLng(85.3734801, 27.7295828),
                    LatLng(85.3730362, 27.7320493),
                    LatLng(85.3719652, 27.7339444),
                    LatLng(85.371182, 27.735503),
                    LatLng(85.3660845, 27.7348938),
                    LatLng(85.3653515, 27.7336152),
                    LatLng(85.3629442, 27.7317574),
                    LatLng(85.3628457, 27.7316814),
                    LatLng(85.3623576, 27.7319412),
                    LatLng(85.3603838, 27.729131),
                    LatLng(85.3598712, 27.7288822),
                    LatLng(85.3584464, 27.7281905),
                    LatLng(85.3550328, 27.7287348),
                    LatLng(85.3512619, 27.7274713),
                    LatLng(85.3485476, 27.7265492),
                    LatLng(85.3493875, 27.7279964),
                    LatLng(85.3500152, 27.7285378),
                    LatLng(85.350278, 27.7297391),
                    LatLng(85.3501424, 27.730077),
                    LatLng(85.3495967, 27.7311019),
                    LatLng(85.3492373, 27.7316052),
                    LatLng(85.3492796, 27.7321343),
                    LatLng(85.3473569, 27.7306424),
                    LatLng(85.3463364, 27.7304448),
                    LatLng(85.3463482, 27.7304975),
                    LatLng(85.3464302, 27.7308649),
                    LatLng(85.3467093, 27.7321156),
                    LatLng(85.3461028, 27.7328624),
                    LatLng(85.3454371, 27.733503),
                    LatLng(85.3450725, 27.7338233),
                    LatLng(85.3447272, 27.7338404),
                    LatLng(85.3440514, 27.7342625),
                    LatLng(85.3443376, 27.7354074),
                    LatLng(85.3443902, 27.7356179),
                    LatLng(85.3448929, 27.7363636),
                    LatLng(85.3450599, 27.7367946),
                    LatLng(85.3458169, 27.7373992),
                    LatLng(85.3465936, 27.7377282),
                    LatLng(85.3468162, 27.7380139),
                    LatLng(85.3469647, 27.7387024),
                    LatLng(85.3471894, 27.7396817),
                    LatLng(85.3470431, 27.7404764),
                    LatLng(85.3471696, 27.7408831),
                    LatLng(85.3468514, 27.741809),
                    LatLng(85.346725, 27.7425549),
                    LatLng(85.3464189, 27.7429039),
                    LatLng(85.3463613, 27.743828),
                    LatLng(85.3457326, 27.7445743),
                    LatLng(85.3458879, 27.7454189),
                    LatLng(85.3454739, 27.7456078),
                    LatLng(85.3461171, 27.7465607),
                    LatLng(85.3460647, 27.7473806),
                    LatLng(85.345496, 27.748934),
                    LatLng(85.3452326, 27.7496918),
                    LatLng(85.3452161, 27.7500587),
                    LatLng(85.3450611, 27.7502575),
                    LatLng(85.3442325, 27.75132),
                    LatLng(85.3439531, 27.75062),
                    LatLng(85.3438517, 27.7498836),
                    LatLng(85.3440964, 27.7494752),
                    LatLng(85.3441349, 27.7491225),
                    LatLng(85.3436769, 27.7489895),
                    LatLng(85.3436759, 27.7488136),
                    LatLng(85.3436107, 27.7487186),
                    LatLng(85.3421712, 27.7483678),
                    LatLng(85.3411965, 27.7483797),
                    LatLng(85.3399517, 27.7485049),
                    LatLng(85.338707, 27.747686),
                    LatLng(85.3376121, 27.7476409),
                    LatLng(85.336611, 27.7477496),
                    LatLng(85.3363019, 27.7473466),
                    LatLng(85.3361533, 27.7473055),
                    LatLng(85.3355993, 27.7471408),
                    LatLng(85.3355223, 27.7470255),
                    LatLng(85.3353689, 27.7466415),
                    LatLng(85.3349388, 27.7463128),
                    LatLng(85.3347958, 27.746097),
                    LatLng(85.3348077, 27.745698),
                    LatLng(85.3344636, 27.7451503),
                    LatLng(85.3337661, 27.7445461),
                    LatLng(85.3336643, 27.7439955),
                    LatLng(85.3334999, 27.7435897),
                    LatLng(85.3334292, 27.7430744),
                    LatLng(85.3336152, 27.7425888),
                    LatLng(85.3335857, 27.7421034),
                    LatLng(85.3329252, 27.7422471),
                    LatLng(85.3322037, 27.742276),
                    LatLng(85.3314849, 27.742086),
                    LatLng(85.3307446, 27.7416303),
                    LatLng(85.3267749, 27.7391709),
                    LatLng(85.3217431, 27.7361037),
                    LatLng(85.3210672, 27.7357523),
                    LatLng(85.3202303, 27.7355054),
                    LatLng(85.3194423, 27.7353416),
                    LatLng(85.3168781, 27.7351802),
                    LatLng(85.313808, 27.7350123),
                    LatLng(85.3136576, 27.7350047),
                    LatLng(85.3126627, 27.7349638),
                    LatLng(85.3123827, 27.7349523),
                    LatLng(85.3122539, 27.7349432),
                    LatLng(85.3119829, 27.7349297),
                    LatLng(85.3108485, 27.7349143),
                    LatLng(85.310457, 27.734929),
                    LatLng(85.3100073, 27.7349625),
                    LatLng(85.3098702, 27.7349727),
                    LatLng(85.3097005, 27.7349997),
                    LatLng(85.309579, 27.735003),
                    LatLng(85.3095205, 27.7350121),
                    LatLng(85.3094419, 27.7350245),
                    LatLng(85.3078873, 27.7352846),
                    LatLng(85.307184, 27.7354864),
                    LatLng(85.3072543, 27.7360063),
                    LatLng(85.3076239, 27.7365785),
                    LatLng(85.3081663, 27.7370414),
                    LatLng(85.3092177, 27.7379435),
                    LatLng(85.3097863, 27.7385703),
                    LatLng(85.3099901, 27.7387412),
                    LatLng(85.3100057, 27.738886),
                    LatLng(85.309164, 27.7400611),
                    LatLng(85.3084439, 27.7404479),
                    LatLng(85.3072913, 27.7406047),
                    LatLng(85.3059347, 27.7406024),
                    LatLng(85.3046755, 27.7406403),
                    LatLng(85.3040524, 27.7407836),
                    LatLng(85.3029628, 27.7409727),
                    LatLng(85.3018899, 27.7409442),
                    LatLng(85.3015192, 27.7408421),
                    LatLng(85.3008814, 27.7408587),
                    LatLng(85.3004435, 27.7410684),
                    LatLng(85.3002709, 27.741049),
                    LatLng(85.2990462, 27.7407979),
                    LatLng(85.2974438, 27.7406882),
                    LatLng(85.2937194, 27.7400825),
                    LatLng(85.2924748, 27.7397216),
                    LatLng(85.2912303, 27.7393323),
                    LatLng(85.290507, 27.7395494),
                    LatLng(85.2902833, 27.7389613),
                    LatLng(85.289595, 27.7370013),
                    LatLng(85.2896706, 27.7361876),
                    LatLng(85.2890196, 27.7348084),
                    LatLng(85.2899807, 27.7340518),
                    LatLng(85.2867639, 27.734713),
                    LatLng(85.2870827, 27.7334371),
                    LatLng(85.2860191, 27.7314264),
                    LatLng(85.2862927, 27.7311392),
                    LatLng(85.2864885, 27.7309754),
                    LatLng(85.2869391, 27.730605),
                    LatLng(85.2874541, 27.7301137),
                    LatLng(85.2878, 27.7298929),
                    LatLng(85.2881969, 27.7295795),
                    LatLng(85.2884569, 27.7294344),
                    LatLng(85.2886983, 27.7293157),
                    LatLng(85.2889988, 27.728969),
                    LatLng(85.2892402, 27.7287886),
                    LatLng(85.2893474, 27.7284087),
                    LatLng(85.2895298, 27.7282235),
                    LatLng(85.2896854, 27.7280051),
                    LatLng(85.2900867, 27.7275015),
                    LatLng(85.290301, 27.7270991),
                    LatLng(85.2905973, 27.726761),
                    LatLng(85.2906564, 27.7265046),
                    LatLng(85.2913537, 27.7264239),
                    LatLng(85.2914763, 27.7262237),
                    LatLng(85.2917319, 27.7261402),
                    LatLng(85.2921906, 27.7256736),
                    LatLng(85.2921477, 27.7252747),
                    LatLng(85.2922643, 27.7248578),
                    LatLng(85.2923032, 27.7245815),
                    LatLng(85.292259, 27.7242548),
                    LatLng(85.2923783, 27.7240829),
                    LatLng(85.2904994, 27.7247201),
                    LatLng(85.2898338, 27.7240484),
                    LatLng(85.2889076, 27.7250373),
                    LatLng(85.2887413, 27.724515),
                    LatLng(85.2887466, 27.7239356),
                    LatLng(85.2882746, 27.7226678),
                    LatLng(85.2885964, 27.7221312),
                    LatLng(85.2884299, 27.7215829),
                    LatLng(85.289304, 27.7208326),
                    LatLng(85.2880921, 27.7202745),
                    LatLng(85.2866642, 27.7195795),
                    LatLng(85.284727, 27.7201235),
                    LatLng(85.2843462, 27.7184546),
                    LatLng(85.2841048, 27.7182741),
                    LatLng(85.2839814, 27.7181507),
                    LatLng(85.283858, 27.7179939),
                    LatLng(85.2837561, 27.7177185),
                    LatLng(85.2835312, 27.7167022),
                    LatLng(85.2828303, 27.7168187),
                    LatLng(85.2811854, 27.7147706),
                    LatLng(85.2803184, 27.7130048),
                    LatLng(85.281219, 27.7127585),
                    LatLng(85.2817609, 27.711714),
                    LatLng(85.2829141, 27.7105514),
                    LatLng(85.2826297, 27.70833),
                    LatLng(85.2820483, 27.7038708),
                    LatLng(85.2817447, 27.701478),
                    LatLng(85.2814809, 27.6990938),
                    LatLng(85.2800716, 27.6993326),
                    LatLng(85.2789663, 27.697307),
                    LatLng(85.2776768, 27.6954816),
                    LatLng(85.2778731, 27.6949583),
                    LatLng(85.276337, 27.6942987),
                    LatLng(85.2728759, 27.694385),
                    LatLng(85.2707908, 27.6985002)
        ***REMOVED***),
                  zoom: 18.0,
                  allowPanning: true,
                  enableScrollWheel: true,
                ),
                layers: [
                  TileLayerOptions(
                    urlTemplate:
                        'https://api.mapbox.com/styles/v1/theaayush/cl6flf3vp000g15mv6mw99ewl/tiles/256/***REMOVED***z***REMOVED***/***REMOVED***x***REMOVED***/***REMOVED***y***REMOVED***@2x?access_token=pk.eyJ1IjoidGhlYWF5dXNoIiwiYSI6ImNreWViMTZlejA5dHkydXRlMjdlZHh6d2UifQ.YwuKn1uPwMLudv3V7xqvCw',
                    additionalOptions: ***REMOVED***
                      'accessToken':
                          'pk.eyJ1IjoidGhlYWF5dXNoIiwiYSI6ImNreWViMTZlejA5dHkydXRlMjdlZHh6d2UifQ.YwuKn1uPwMLudv3V7xqvCw',
                      'id': 'mapbox.mapbox-streets-v8',
                    ***REMOVED***,
                  ),
          ***REMOVED***
              ),
              Assets.images.map.image(
                height: 45,
                width: 45,
              ),
      ***REMOVED***
          ),
        );
      ***REMOVED***,
    );
  ***REMOVED***
***REMOVED***
